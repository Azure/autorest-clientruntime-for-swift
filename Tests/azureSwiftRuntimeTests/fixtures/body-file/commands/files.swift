// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// Files is the test Infrastructure for AutoRest Swagger BAT
import Foundation
import azureSwiftRuntime
struct FilesNamespace {
    // GetEmptyFile get empty file
    public class GetEmptyFileCommand : BaseCommand {

        public override init() {
            super.init()
            self.method = "Get"
            self.isLongRunningOperation = false
            self.path = "/files/stream/empty"
        }

        public override func preCall()  {
        }

        public override func returnFunc(data: Data) throws -> Decodable? {
            return data
        }
        
        public func execute(client: RuntimeClient) throws -> Data? {
            return try client.execute(command: self) as! Data?
        }
    }

    // GetFile get file
    public class GetFileCommand : BaseCommand {

        public override init() {
            super.init()
            self.method = "Get"
            self.isLongRunningOperation = false
            self.path = "/files/stream/nonempty"
        }

        public override func preCall()  {
        }

        public override func returnFunc(data: Data) throws -> Decodable? {
            return data
        }
        
        public func execute(client: RuntimeClient) throws -> Data? {
            return try client.execute(command: self) as! Data?
        }
    }

    // GetFileLarge get a large file
    public class GetFileLargeCommand : BaseCommand {

        public override init() {
            super.init()
            self.method = "Get"
            self.isLongRunningOperation = false
            self.path = "/files/stream/verylarge"
        }

        public override func preCall()  {
        }

        public override func returnFunc(data: Data) throws -> Decodable? {
            return data
        }
        
        public func execute(client: RuntimeClient) throws -> Data? {
            return try client.execute(command: self) as! Data?
        }
    }

}
